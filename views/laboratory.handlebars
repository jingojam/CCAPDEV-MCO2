<body>        
        <div class="container">
            <div class="create_options">

                <a href="/create?userId={{user._id}}"><div id="option_1">
                    <p>< Return to Filter Reservations</p>
                
                </div></a>
            </div>
            
            <div class="create_content">

                <h1>{{labname}}</h1>

                <div class="reserve-info">
                    <div class="date-prompt">
                        <form>
                            <h3>Choose a date:</h3>
                            <select name="Days" id="Days">
                                {{#each days}}
                                    <option value="{{this}}">{{this}}</option>
                                {{/each}}
                            </select>
                            <h3>Choose start time:</h3>
                            <select name="Hours" id="Hours">
                                {{#each startTimes}}
                                    <option value="{{this.value}}">{{this.label}}</option>
                                {{/each}}
                            </select>
                            <h3>Select end hours</h3>
                            <select name="EndHours" id="EndHours">
                                {{#each endTimes}}
                                    <option value="{{this.value}}">{{this.label}}</option>
                                {{/each}}
                            </select>
                        </form>

                        <div class="anonymous-option">
                            <label>
                                <input type="checkbox" id="anonymous" name="anonymous">
                                Reserve anonymously
                            </label>
                        </div>
                    </div>
                    
                    <div class="seat-table">
                        <table id="reservation-table" class="reservation-table">
                            <thead>
                                <tbody>
                                    {{#each seats}}
                                        <tr>
                                            <td>{{this.seatNumber}}</td>
                                            <td>{{this.vacancy}}</td>
                                            <td><button class="reserve-lab">{{this.reserveText}}</button></td>
                                        </tr>
                                    {{/each}}
                                </tbody>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </body>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let selectedDate       = null;
    let selectedStartTime  = null;
    let selectedEndTime    = null;

    const daysEl     = document.getElementById('Days');
    const hoursEl    = document.getElementById('Hours');
    const endHoursEl = document.getElementById('EndHours');

    if (!daysEl || !hoursEl || !endHoursEl) {
      console.warn("One or more dropdowns not found");
      return;
    }

    /* ---------- NEW FUNCTION: filter endâ€‘time options ---------- */
    function filterEndTimes() {
      const start = Number(selectedStartTime);          // 900, 930, â€¦
      let earliestValid = null;

      Array.from(endHoursEl.options).forEach(opt => {
        const end = Number(opt.value);
        const allowed = end > start;                    // strictly after

        opt.disabled = !allowed;                       // grey out
        opt.hidden   = !allowed;                       // hide in list

        if (allowed && earliestValid === null) earliestValid = opt;
      });

      // If current end time isn't valid anymore, pick the earliest valid one
      if (selectedEndTime === null || Number(selectedEndTime) <= start) {
        if (earliestValid) {
          earliestValid.selected = true;
          selectedEndTime = earliestValid.value;
          console.log("Autoâ€‘selected new end time:", selectedEndTime);
        }
      }
    }

    /* ---------------- EXISTING LISTENERS ---------------- */
    daysEl.addEventListener('change', function () {
      selectedDate = this.value;
      console.log("Selected date:", selectedDate);
    });

    hoursEl.addEventListener('change', function () {
      selectedStartTime = this.value;
      console.log("Selected start time:", selectedStartTime);
      filterEndTimes();          // ðŸ”” update endâ€‘time list
    });

    endHoursEl.addEventListener('change', function () {
      selectedEndTime = this.value;
      console.log("Selected end time:", selectedEndTime);
    });

    /* ---------- INITIALISE ON PAGE LOAD ---------- */
    // Set default start/end if the selects already have a value
    selectedStartTime = hoursEl.value;
    selectedEndTime   = endHoursEl.value;
    filterEndTimes();
  });
</script>
